//Minimum cost to fill given weight in a bag
import java.util.*;
public class DynamicProgramming 
{
	public static int minimumCost(int cost[],int n,int w)
	{
		int nc[] = new int[n+1];
		for(int i=0;i<n;i++)
		{
			nc[i+1] = cost[i];
		}
		
		int DP[] = new int[n+1];
		for(int i=1;i<DP.length;i++)
		{
			DP[i]=nc[i];
			int li=1;
			int ri=i-1;
			while(li<=ri)
			{
				if(DP[li]+DP[ri]<DP[i])
					DP[i]=DP[li]+DP[ri];
				li++;
				ri--;
			}
		}
		return DP[n];
	}
	public static void main(String[] args) 
	{
		int cost[] = {20,10,4,50,100};
		int w =5;
		int n=cost.length;
		System.out.println(minimumCost(cost,n,w));
	}
}
