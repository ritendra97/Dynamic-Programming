//Count number of ways to reach destination in a Maze
import java.util.*;
public class DynamicProgramming 
{
	public static int countMazePath(int maze[][])
	{
		int R = maze[0].length;
		int C = maze.length;
		
		for(int i=0;i<R;i++)
		{
			if(maze[0][i]!=-1)
				maze[0][i]=1;
			else 
				break;
		}
		
		for(int i=0;i<C;i++)
		{
			if(maze[i][0]!=-1)
				maze[i][0]=1;
			else 
				break;
		}
		
		for(int i=1;i<R;i++)
		{
			for(int j=1;j<C;j++)
			{
				if(maze[i][j]==-1)
					continue;
				
				if(maze[i-1][j]>0)
					maze[i][j]=maze[i][j]+maze[i-1][j];
				
				if(maze[i][j-1]>0)
					maze[i][j]=maze[i][j]+maze[i][j-1];
			}
		}
		return maze[R-1][C-1];
	}
	public static void main(String[] args) 
	{

        int maze[][] = {{0, 0, 0, 0}, 
                       {0, -1, 0, 0}, 
                       {-1, 0, 0, 0}, 
                       {0, 0, 0, 0}}; 
        System.out.println (countMazePath(maze));
	}
}
