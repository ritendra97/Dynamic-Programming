//Maximum weight path ending at any element of last row in a matrix
import java.util.*;
public class DynamicProgramming 
{
	public static int maximumweightpath(int mat[][],int N)
	{
		int DP[][] = new int[N][N];
		
		DP[0][0]=mat[0][0];
		
		for(int i=1;i<N;i++)
		{
			DP[i][0]=DP[i-1][0]+mat[i][0];
		}
		
		for(int i=1;i<N;i++)
		{
			for(int j=1;j<i+1 && j<N;j++)
			{
				DP[i][j] = mat[i][j]+Math.max(DP[i-1][j], DP[i-1][j-1]);
			}
		}
		
		int result =0;
		for(int j=0;j<N;j++)
		{
			if(result<DP[N-1][j])
				result=DP[N-1][j];
		}
		
		return result;
	}
	public static void main(String[] args) 
	{
		int mat[][] = {{4,1,5,6,1},
				       {2,9,2,11,10},
				       {15,1,3,15,2},
				       {16,92,41,4,3},
				       {8,142,6,4,8}};
		int N=5;
		System.out.println(maximumweightpath(mat,N));
	}
}
