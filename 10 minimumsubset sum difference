package com.company;
import java.util.*;

public class Main {

    public static int subset_sum(int arr[],int sum)
    {
        ArrayList<Integer> a  = new ArrayList<Integer>();
        boolean DP[][] = new boolean[arr.length+1][sum+1];
        for(int i=0;i<=sum;i++)
        {
            DP[0][i]=false;
        }

        for(int i=0;i<=arr.length;i++)
        {
            DP[i][0]=true;
        }

        for(int i= 1;i<=arr.length;i++)
        {
            for(int j= 1;j<=sum;j++)
            {
                if(arr[i-1]<=j)
                {
                    DP[i][j]=DP[i-1][j-arr[i-1]] || DP[i-1][j];
                }
                else
                {
                    DP[i][j]=DP[i-1][j];
                }
            }
        }
        int diff = Integer.MAX_VALUE;
        for(int j= sum/2;j>=0;j--){
            if(DP[arr.length][j]==true) {
                diff = sum-2*j;
                break;
            }
        }
        return diff;
    }
    public static int minimumsubsetsumdifference(int set[])
    {
        int sum = 0;
        for (int a:set){
            sum+=a;
        }
        return subset_sum(set,sum);
    }
    public static void main(String[] args)
    {
        int set[] = { 3, 1, 4, 2, 2, 1 };
        System.out.println(minimumsubsetsumdifference(set));
    }
}
