//10 minimumsubset sum difference
import java.util.*;
// this cod lie if range is inbetween 10
public class DynamicProgramming 
{
	public static int subset_sum(int arr[],int sum)
	{
		ArrayList<Integer> a  = new ArrayList<Integer>();
		boolean DP[][] = new boolean[arr.length+1][sum+1];
		for(int i=0;i<=sum;i++)
		{
			DP[0][i]=false;
		}
		
		for(int i=0;i<=arr.length;i++)
		{
			DP[i][0]=true;
		}
		
		for(int i= 1;i<=arr.length;i++)
		{
			for(int j= 1;j<=sum;j++)
			{
				if(arr[i-1]<=j)
				{
					DP[i][j]=DP[i-1][j-arr[i-1]] || DP[i-1][j];
				}
				else
				{
					DP[i][j]=DP[i-1][j];
				}
			}
		}
		for(int i=0;i<sum/2;i++)
		{
			if(DP[arr.length][i]==true)
				a.add(i);
		}
		
		int mn = Integer.MAX_VALUE;
		for(int j=0;j<a.size();j++)
		{
			mn=Math.min(mn, 10-2*(a.get(j)));
		}
		return mn;
	}
	public static int minimumsubsetsumdifference(int set[])
	{
		return subset_sum(set,10);
	}
    public static void main(String[] args)
    {
	   int set[] = {1, 2,7};
	   System.out.println(minimumsubsetsumdifference(set));
    }
}
