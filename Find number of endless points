//Find no of endless Point
import java.util.*;
public class DynamicProgramming 
{
	public static int countEndless(int input[][], int n)
	{
		boolean right[][]= new boolean[n][n];
		boolean down[][]= new boolean[n][n];
		
		for(int i=0;i<input.length;i++)
		{
			for(int j=input[0].length-1;j>=0;j--)
			{
				if(j==input[0].length-1)
				{
					if(input[i][j]==1)
				       right[i][j]=true;
				}
				else
				{
					if(input[i][j]==1)
					{
						if(input[i][j+1]==1 && right[i][j+1]==true)
							right[i][j]=true;
					}
				}
				
			}
		}
		for(int i=input.length-1;i>=0;i--)
		{
			for(int j=input[0].length-1;j>=0;j--)
			{
				if(i==input.length-1)
				{
					if(input[i][j]==1)
				       down[i][j]=true;
				}
				else
				{
					if(input[i][j]==1)
					{
						if(input[i+1][j]==1 && down[i+1][j]==true)
							down[i][j]=true;
					}
				}
				
			}
		}
		int count=0;
		for(int i=0;i<input.length-1;i++)
		{
			for(int j=0;j<input.length-1;j++)
			{
				if(right[i][j]==true && down[i][j]==true)
					count++;
			}
		}	
		return count;
	}
	public static void main(String[] args)
	{
		int input[][] = {{1, 0, 1, 1}, 
                         {0, 1, 1, 1}, 
                         {1, 1, 1, 1}, 
                         {0, 1, 1, 0}}; 
        int n = 4; 
  
        
       System.out.print(countEndless(input, n)); 
	}
}
